{"ast":null,"code":"const initialState = () => ({\n  color: 'blue'\n});\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'red':\n      return { ...state,\n        color: 'red'\n      };\n\n    case 'blue':\n      return { ...state,\n        color: 'blue'\n      };\n\n    case 'green':\n      return { ...state,\n        color: 'green'\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["initialState","color","reducer","state","action","type"],"sources":["/Users/sfurukawa/Workspace/react/my-first-app/src/ducks/reducers.tsx"],"sourcesContent":["import { ColorActionType, ColorState } from './types';\n\nconst initialState = (): ColorState => ({\n  color: 'blue',\n});\n\nconst reducer = (\n  state = initialState(),\n  action: ColorActionType\n): ColorState => {\n  switch (action.type) {\n    case 'red':\n      return { ...state, color: 'red' };\n    case 'blue':\n      return { ...state, color: 'blue' };\n    case 'green':\n      return { ...state, color: 'green' };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"AAEA,MAAMA,YAAY,GAAG,OAAmB;EACtCC,KAAK,EAAE;AAD+B,CAAnB,CAArB;;AAIA,MAAMC,OAAO,GAAG,YAGC;EAAA,IAFfC,KAEe,uEAFPH,YAAY,EAEL;EAAA,IADfI,MACe;;EACf,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYF,KAAK,EAAE;MAAnB,CAAP;;IACF,KAAK,MAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYF,KAAK,EAAE;MAAnB,CAAP;;IACF,KAAK,OAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYF,KAAK,EAAE;MAAnB,CAAP;;IACF;MACE,OAAOE,KAAP;EARJ;AAUD,CAdD;;AAgBA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}